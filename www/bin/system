#!/usr/bin/php
<?

// -- BASICS

	define("ROOT", realpath(__DIR__.'/..'));
	define("NAME", basename($_SERVER['SCRIPT_NAME']));

	require_once ROOT."/etc/init.d/pre-cli.php";
	require_once ROOT."/etc/init.d/core.php";
	require_once ROOT."/lib/include/core.cli.php";

// -- CLASSES

	// Options container
	abstract class CLIOptions extends YacmsCLIOptions
	{
		/* Override for console options parent
		 * @return void
		 */
		public static function init()
		{
			self::$opts = array(
				"env"   => array(
					"value" => false,
					"short" => 'e',
					"desc"  => 'Use this environment',
				),
				"force"   => array(
					"value" => false,
					"short" => 'f',
					"desc"  => 'Force action',
				),
				"help"   => array(
					"value" => false,
					"short" => 'h',
					"desc"  => 'Show this help',
				),
				"verbose" => array(
					"value" => false,
					"short" => 'v',
					"desc"  => 'Talkative mode',
				),
				"command" => array(
					"value" => null
				),
				"params"  => array(
					"value" => array()
				),
			);

			self::$commands = array(
				"info"     => 'Get summary info about yout YaCMS',
				"htaccess" => 'Rebuild htaccess rules',
			);

			self::$info = array(
				"name" => NAME,
				"head" =>
					'YaCMS manager'.CR.
					'Universal manager, that allows you to change settings, update system and other'.CR,

				"foot" => '',
			);
		}
	}


	abstract class CLICommands extends YacmsCLICommands
	{
		/** Print basic system info to STDOUT
		 * @return void
		 */
		public static function info()
		{
			\System\Init::full();
			$ext_modules = array();
			$dir = opendir($p = ROOT.System\Module::BASE_DIR);
			$dirs = array();
			while ($file = readdir($dir)) {
				if (strpos($file, ".") !== 0 && is_dir($p.'/'.$file)) {
					$dirs[] = $p.'/'.$file.'/';
				}
			}

			closedir($dir);

			foreach ($dirs as $d) {
				$dir = opendir($d);
				while ($file = readdir($dir)) {
					if (strpos($file, ".") !== 0 && strpos($file, ".php")) {
						$ext_modules[] = str_replace(ROOT.System\Module::BASE_DIR, '', $d.$file);
					}
				}
			}

			out_flist(array(
				"CMS Name" => cfg('own', 'name'),
				"Version"    => System\Output::introduce(),
				"Branch"     => cfg('own', 'branch'),
			));

			if (CLIOptions::get('verbose')) {
				out();
				out("External modules: ", false);
				if (any($ext_modules)) {
					out();
					foreach ($ext_modules as $mod) {
						out("  ". $mod);
					}
					out();
				} else out("none");
			}
		}


		/** Compile htaccess
		 */
		public static function htaccess()
		{
			\System\Init::basic();
			vout(l('Updating .htaccess rules'));
			file_put_contents(ROOT.'/.htaccess', System\Router::generate_htaccess());
		}
	}




// -- RUNTIME

	System\Init::cli();
